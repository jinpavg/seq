<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--If you edit this file, please place it in a safe place since future exports will overwrite this automatically generated reference file.-->
<c74object name="seq.blocks~">
<metadatalist>
<metadata name="author">Philip Meyer</metadata>
<metadata name="tag">sequence</metadata>
</metadatalist>
<methodlist>
<method name="message"><digest>message input</digest><description>message input</description></method>
<method name="in2"><digest>message input</digest><description>message input</description></method>
</methodlist>
<attributelist>
<attribute name="syncupdate" get="1" set="1" size="1" type="float64">
<digest>When enabled, changes to parameters are deferred until the phasor wraps.</digest>
</attribute>
</attributelist>
<description>seq.blocks~ divides a phasor signal into shorter phasors based on a list of integers passed into the second inlet. This object is inspired by the concept of the “container” from Alex Van Gils’ and Sam Tarakajian’s Nestup.</description>
<digest>Subdivide a phasor signal irregularly.</digest>
<seealsolist>
    <seealsolist>
        <seealso name="seq.divs~" />
    </seealsolist>
</seealsolist>
</c74object>